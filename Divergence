{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"authorship_tag":"ABX9TyMLeVtALTYGQO8XDBOVcb6o"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","source":["! pip install yfinance"],"metadata":{"id":"9DuALK75u6FA","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1679622752714,"user_tz":420,"elapsed":5272,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"outputId":"4faa3475-7ff3-4918-b359-efa04950baaa"},"execution_count":1,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: yfinance in /usr/local/lib/python3.9/dist-packages (0.2.13)\n","Requirement already satisfied: beautifulsoup4>=4.11.1 in /usr/local/lib/python3.9/dist-packages (from yfinance) (4.11.2)\n","Requirement already satisfied: lxml>=4.9.1 in /usr/local/lib/python3.9/dist-packages (from yfinance) (4.9.2)\n","Requirement already satisfied: numpy>=1.16.5 in /usr/local/lib/python3.9/dist-packages (from yfinance) (1.22.4)\n","Requirement already satisfied: html5lib>=1.1 in /usr/local/lib/python3.9/dist-packages (from yfinance) (1.1)\n","Requirement already satisfied: frozendict>=2.3.4 in /usr/local/lib/python3.9/dist-packages (from yfinance) (2.3.6)\n","Requirement already satisfied: multitasking>=0.0.7 in /usr/local/lib/python3.9/dist-packages (from yfinance) (0.0.11)\n","Requirement already satisfied: pytz>=2022.5 in /usr/local/lib/python3.9/dist-packages (from yfinance) (2022.7.1)\n","Requirement already satisfied: appdirs>=1.4.4 in /usr/local/lib/python3.9/dist-packages (from yfinance) (1.4.4)\n","Requirement already satisfied: cryptography>=3.3.2 in /usr/local/lib/python3.9/dist-packages (from yfinance) (39.0.2)\n","Requirement already satisfied: requests>=2.26 in /usr/local/lib/python3.9/dist-packages (from yfinance) (2.27.1)\n","Requirement already satisfied: pandas>=1.3.0 in /usr/local/lib/python3.9/dist-packages (from yfinance) (1.4.4)\n","Requirement already satisfied: soupsieve>1.2 in /usr/local/lib/python3.9/dist-packages (from beautifulsoup4>=4.11.1->yfinance) (2.4)\n","Requirement already satisfied: cffi>=1.12 in /usr/local/lib/python3.9/dist-packages (from cryptography>=3.3.2->yfinance) (1.15.1)\n","Requirement already satisfied: six>=1.9 in /usr/local/lib/python3.9/dist-packages (from html5lib>=1.1->yfinance) (1.16.0)\n","Requirement already satisfied: webencodings in /usr/local/lib/python3.9/dist-packages (from html5lib>=1.1->yfinance) (0.5.1)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.9/dist-packages (from pandas>=1.3.0->yfinance) (2.8.2)\n","Requirement already satisfied: idna<4,>=2.5 in /usr/local/lib/python3.9/dist-packages (from requests>=2.26->yfinance) (3.4)\n","Requirement already satisfied: urllib3<1.27,>=1.21.1 in /usr/local/lib/python3.9/dist-packages (from requests>=2.26->yfinance) (1.26.15)\n","Requirement already satisfied: certifi>=2017.4.17 in /usr/local/lib/python3.9/dist-packages (from requests>=2.26->yfinance) (2022.12.7)\n","Requirement already satisfied: charset-normalizer~=2.0.0 in /usr/local/lib/python3.9/dist-packages (from requests>=2.26->yfinance) (2.0.12)\n","Requirement already satisfied: pycparser in /usr/local/lib/python3.9/dist-packages (from cffi>=1.12->cryptography>=3.3.2->yfinance) (2.21)\n"]}]},{"cell_type":"code","source":["! pip install plotly"],"metadata":{"id":"Fy8UOHJcpe9o","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1679622756942,"user_tz":420,"elapsed":4233,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"outputId":"52ddbc04-3ff3-4545-e70c-abbc8c4e5a3e"},"execution_count":2,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: plotly in /usr/local/lib/python3.9/dist-packages (5.13.1)\n","Requirement already satisfied: tenacity>=6.2.0 in /usr/local/lib/python3.9/dist-packages (from plotly) (8.2.2)\n"]}]},{"cell_type":"code","source":["! pip install pandas_ta"],"metadata":{"id":"eVytZJEAwzFC","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1679622764226,"user_tz":420,"elapsed":7287,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"outputId":"6a69f428-8314-46dd-c1b6-761480dc0819"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Collecting pandas_ta\n","  Downloading pandas_ta-0.3.14b.tar.gz (115 kB)\n","\u001b[2K     \u001b[90m━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\u001b[0m \u001b[32m115.1/115.1 KB\u001b[0m \u001b[31m3.6 MB/s\u001b[0m eta \u001b[36m0:00:00\u001b[0m\n","\u001b[?25h  Preparing metadata (setup.py) ... \u001b[?25l\u001b[?25hdone\n","Requirement already satisfied: pandas in /usr/local/lib/python3.9/dist-packages (from pandas_ta) (1.4.4)\n","Requirement already satisfied: pytz>=2020.1 in /usr/local/lib/python3.9/dist-packages (from pandas->pandas_ta) (2022.7.1)\n","Requirement already satisfied: numpy>=1.18.5 in /usr/local/lib/python3.9/dist-packages (from pandas->pandas_ta) (1.22.4)\n","Requirement already satisfied: python-dateutil>=2.8.1 in /usr/local/lib/python3.9/dist-packages (from pandas->pandas_ta) (2.8.2)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.9/dist-packages (from python-dateutil>=2.8.1->pandas->pandas_ta) (1.16.0)\n","Building wheels for collected packages: pandas_ta\n","  Building wheel for pandas_ta (setup.py) ... \u001b[?25l\u001b[?25hdone\n","  Created wheel for pandas_ta: filename=pandas_ta-0.3.14b0-py3-none-any.whl size=218921 sha256=77c0cf06aada26d494551a2a04ff37604161dfddd74185bf64ea254ac0ef3185\n","  Stored in directory: /root/.cache/pip/wheels/1e/5c/47/759b32beb377aee150eb4c1f1b2b7635032cc19ea09ce076fd\n","Successfully built pandas_ta\n","Installing collected packages: pandas_ta\n","Successfully installed pandas_ta-0.3.14b0\n"]}]},{"cell_type":"code","source":["! pip install matplotlib"],"metadata":{"id":"zJ8skkrBOGlB","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1679622770629,"user_tz":420,"elapsed":6407,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"outputId":"88b0860c-eae7-4786-a77b-916bc3ad625a"},"execution_count":4,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: matplotlib in /usr/local/lib/python3.9/dist-packages (3.7.1)\n","Requirement already satisfied: pyparsing>=2.3.1 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (3.0.9)\n","Requirement already satisfied: fonttools>=4.22.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (4.39.2)\n","Requirement already satisfied: kiwisolver>=1.0.1 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (1.4.4)\n","Requirement already satisfied: numpy>=1.20 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (1.22.4)\n","Requirement already satisfied: pillow>=6.2.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (8.4.0)\n","Requirement already satisfied: importlib-resources>=3.2.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (5.12.0)\n","Requirement already satisfied: cycler>=0.10 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (0.11.0)\n","Requirement already satisfied: python-dateutil>=2.7 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (2.8.2)\n","Requirement already satisfied: packaging>=20.0 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (23.0)\n","Requirement already satisfied: contourpy>=1.0.1 in /usr/local/lib/python3.9/dist-packages (from matplotlib) (1.0.7)\n","Requirement already satisfied: zipp>=3.1.0 in /usr/local/lib/python3.9/dist-packages (from importlib-resources>=3.2.0->matplotlib) (3.15.0)\n","Requirement already satisfied: six>=1.5 in /usr/local/lib/python3.9/dist-packages (from python-dateutil>=2.7->matplotlib) (1.16.0)\n"]}]},{"cell_type":"code","source":["! pip install numpy"],"metadata":{"id":"2YWXzvOEUcx4","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1679622776172,"user_tz":420,"elapsed":5548,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"outputId":"ed678549-7650-4709-b66d-48f838cb1320"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["Looking in indexes: https://pypi.org/simple, https://us-python.pkg.dev/colab-wheels/public/simple/\n","Requirement already satisfied: numpy in /usr/local/lib/python3.9/dist-packages (1.22.4)\n"]}]},{"cell_type":"code","source":["import yfinance as yf\n","import plotly.graph_objects as go\n","import pandas_ta as pd\n","\"\"\"\n","#--------------------------------------------------------------------------------------------------\n","import pandas as pd\n","df = pd.read_csv('https://raw.githubusercontent.com/plotly/datasets/master/finance-charts-apple.csv')\n","\n","fig = go.Figure(data=go.Candlestick(x=df['Date'],\n","                    open=df['AAPL.Open'],\n","                    high=df['AAPL.High'],\n","                    low=df['AAPL.Low'],\n","                    close=df['AAPL.Close'])) \n","\n","fig.update_layout(xaxis_rangeslider_visible=False)\n","fig.show()\n","#-------------------------------------------------------------------------------------------------\n","\"\"\"\n","data1 = yf.download(tickers='SPY', period='30d', interval='1d')\n","\n","fig = go.Figure(data=[go.Candlestick(x=data1.index,\n","                                     open=data1['Open'],\n","                                     high=data1['High'],\n","                                     low=data1['Low'],\n","                                     close=data1['Close'])])\n","\n","\n","fig.update_layout(xaxis_rangeslider_visible=False)\n","fig.show()"],"metadata":{"id":"moxOPSQOwyMz","colab":{"base_uri":"https://localhost:8080/","height":559},"executionInfo":{"status":"ok","timestamp":1679622777384,"user_tz":420,"elapsed":1214,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"outputId":"3877ad23-e192-43f9-935a-999e71447ea8"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["\r[*********************100%***********************]  1 of 1 completed\n"]},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"5a7a14c2-5644-4089-a2c1-c5214bbac215\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"5a7a14c2-5644-4089-a2c1-c5214bbac215\")) {                    Plotly.newPlot(                        \"5a7a14c2-5644-4089-a2c1-c5214bbac215\",                        [{\"close\":[407.0899963378906,408.0400085449219,412.8299865722656,412.6400146484375,413.9800109863281,408.2799987792969,407.260009765625,399.0899963378906,398.5400085449219,400.6600036621094,396.3800048828125,397.7300109863281,396.260009765625,394.739990234375,397.80999755859375,404.19000244140625,404.4700012207031,398.2699890136719,398.9200134277344,391.55999755859375,385.9100036621094,385.3599853515625,391.7300109863281,389.2799987792969,396.1099853515625,389.989990234375,393.739990234375,398.9100036621094,392.1099853515625,393.1700134277344],\"high\":[414.57000732421875,408.44000244140625,412.9700012207031,415.04998779296875,414.05999755859375,412.9100036621094,407.510009765625,404.1600036621094,401.1300048828125,402.20001220703125,397.25,401.2900085449219,399.2799987792969,396.69000244140625,398.69000244140625,404.45001220703125,407.45001220703125,404.6700134277344,399.7099914550781,401.4800109863281,393.1600036621094,390.3900146484375,393.45001220703125,389.489990234375,396.4700012207031,394.3999938964844,394.1700134277344,399.4100036621094,402.489990234375,399.2900085449219],\"low\":[405.80999755859375,405.010009765625,408.239990234375,408.510009765625,409.4700012207031,408.1400146484375,404.04998779296875,398.82000732421875,397.0199890136719,396.25,393.6400146484375,396.75,396.1499938964844,393.3800048828125,392.3299865722656,399.0299987792969,404.010009765625,397.6300048828125,396.5899963378906,390.5299987792969,384.32000732421875,380.6499938964844,387.04998779296875,383.7099914550781,386.2900085449219,388.54998779296875,390.07000732421875,395.5799865722656,392.07000732421875,390.3500061035156],\"open\":[414.4100036621094,405.8599853515625,408.7200012207031,411.239990234375,410.3500061035156,408.7900085449219,406.05999755859375,403.05999755859375,399.5199890136719,401.55999755859375,395.4200134277344,399.8699951171875,397.2300109863281,395.4100036621094,392.67999267578125,399.7099914550781,405.04998779296875,404.4200134277344,398.3900146484375,399.739990234375,390.989990234375,381.80999755859375,390.5,385.8900146484375,386.82000732421875,393.2200012207031,390.79998779296875,397.239990234375,398.7300109863281,395.0899963378906],\"x\":[\"2023-02-09T00:00:00\",\"2023-02-10T00:00:00\",\"2023-02-13T00:00:00\",\"2023-02-14T00:00:00\",\"2023-02-15T00:00:00\",\"2023-02-16T00:00:00\",\"2023-02-17T00:00:00\",\"2023-02-21T00:00:00\",\"2023-02-22T00:00:00\",\"2023-02-23T00:00:00\",\"2023-02-24T00:00:00\",\"2023-02-27T00:00:00\",\"2023-02-28T00:00:00\",\"2023-03-01T00:00:00\",\"2023-03-02T00:00:00\",\"2023-03-03T00:00:00\",\"2023-03-06T00:00:00\",\"2023-03-07T00:00:00\",\"2023-03-08T00:00:00\",\"2023-03-09T00:00:00\",\"2023-03-10T00:00:00\",\"2023-03-13T00:00:00\",\"2023-03-14T00:00:00\",\"2023-03-15T00:00:00\",\"2023-03-16T00:00:00\",\"2023-03-17T00:00:00\",\"2023-03-20T00:00:00\",\"2023-03-21T00:00:00\",\"2023-03-22T00:00:00\",\"2023-03-23T00:00:00\"],\"type\":\"candlestick\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"rangeslider\":{\"visible\":false}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('5a7a14c2-5644-4089-a2c1-c5214bbac215');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}}]},{"cell_type":"code","source":["import numpy as np\n","import matplotlib.pyplot as plt\n","import pandas as pd\n","import yfinance as yf\n","from scipy.signal import argrelextrema\n","import plotly.graph_objects as go\n","\n","ticker = 'F'\n","yfObj = yf.Ticker(ticker)\n","data = yfObj.history(period='6mo', interval='1d')"],"metadata":{"id":"aFvsuphqiHRg","executionInfo":{"status":"ok","timestamp":1679622778553,"user_tz":420,"elapsed":1172,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}}},"execution_count":7,"outputs":[]},{"cell_type":"code","source":["#print(data['Close'].to_string(header = False, index=False))"],"metadata":{"id":"aFEazpAYLeA-","executionInfo":{"status":"ok","timestamp":1679622778553,"user_tz":420,"elapsed":11,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}}},"execution_count":8,"outputs":[]},{"cell_type":"code","source":["max_idx = argrelextrema(data['High'].values, np.greater, order=3)[0]\n","min_idx = argrelextrema(data['Low'].values, np.less, order=3)[0]\n","\n","print(data.iloc[max_idx])\n","fig = go.Figure(data=[go.Candlestick(x=data.index,\n","                open=data['Open'],\n","                high=data['High'],\n","                low=data['Low'],\n","                close=data['Close'])])\n","\n","fig.update_layout(xaxis_rangeslider_visible=False)\n","\n","\n","fig.add_trace(\n","    go.Scatter(\n","        mode='markers',\n","        x=data.index[max_idx],\n","        y=data.iloc[max_idx,1]+.5,\n","        marker=dict(\n","            symbol='cross',\n","            color='green',\n","            size=10,\n","         \n","        )\n","    )\n","\n",")\n","\n","fig.add_trace(\n","    go.Scatter(\n","        mode='markers',\n","        x=data.index[min_idx],\n","        y=data.iloc[min_idx,2]-.5,\n","        marker=dict(\n","            symbol='cross',\n","            color='red',\n","            size=10,\n","         \n","        )\n","    )\n",")"],"metadata":{"id":"o3WLiEngXrL_"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["from collections import deque\n","\n","\n","colors = plt.rcParams['axes.prop_cycle'].by_key()['color']\n","# Get K consecutive higher peaks\n","K = 2\n","high_idx = argrelextrema(data['High'].values, np.greater, order=3)[0]\n","highs = data.iloc[high_idx]['High']\n","\n","extrema = []\n","count = 0\n","ex_deque = deque(maxlen=K)\n","for i, idx in enumerate(high_idx):\n","  if i == 0:\n","    ex_deque.append(idx)\n","    continue\n","  if highs[i] < highs[i-1]:\n","    ex_deque.clear()\n","   \n","  ex_deque.append(idx)\n"," \n","  if len(ex_deque) == K:\n","    # K-consecutive higher highs found\n","    extrema.append(ex_deque.copy())\n","    print(extrema[count])\n","    count += 1\n","  \n","test = data.iloc[extrema[0][0]]['High']\n","\n","#print(highs)\n","print(test)\n","print(extrema[0][0])\n","print(extrema[0][1])\n","print(extrema[1])\n","print(extrema[2])\n","print(extrema)\n","print(high_idx)\n","print(max_idx)\n","\n","#print(data.iloc[high_idx]['High'],high_idx)"],"metadata":{"id":"sDaD421V5Rvy","colab":{"base_uri":"https://localhost:8080/"},"executionInfo":{"status":"ok","timestamp":1679622778554,"user_tz":420,"elapsed":9,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"outputId":"1431c2a0-3c42-4854-e7c0-db2c69ae32be"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["deque([16, 36], maxlen=2)\n","deque([41, 47], maxlen=2)\n","deque([75, 89], maxlen=2)\n","11.404328012760686\n","16\n","36\n","deque([41, 47], maxlen=2)\n","deque([75, 89], maxlen=2)\n","[deque([16, 36], maxlen=2), deque([41, 47], maxlen=2), deque([75, 89], maxlen=2)]\n","[  8  16  36  41  47  55  75  89  97 110 122]\n","[  8  16  36  41  47  55  75  89  97 110 122]\n"]}]},{"cell_type":"code","source":["close = data['High'].values\n","dates = data.index\n","\n","plt.figure(figsize=(15, 8))\n","plt.plot(data['High'])\n","_ = [plt.plot(dates[i], close[i], c=colors[1]) for i in extrema]\n","\n","#----------------------------------------------------------\n","\n","#data1 = () - (data.index[max_idx][1])\n","#print(highs)\n","#print(data.index[max_idx][])\n","\n","#print (data1)\n","print(data.index[max_idx])\n","print(data.iloc[max_idx,1])\n","\n","\n","fig = go.Figure(data=[go.Candlestick(x=data.index,\n","                open=data['Open'],\n","                high=data['High'],\n","                low=data['Low'],\n","                close=data['Close'])])\n","\n","fig.update_layout(xaxis_rangeslider_visible=False)\n","\n","fig.add_trace(\n","    go.Scatter(\n","        mode='markers',\n","        x=data.index[max_idx],\n","        y=data.iloc[max_idx,1]+.5,\n","        marker=dict(\n","            symbol='cross',\n","            color='green',\n","            size=10,\n","         \n","        )\n","    )\n",")\n","\n","fig.add_trace(\n","    go.Scatter(\n","        mode='markers',\n","        x=data.index[min_idx],\n","        y=data.iloc[min_idx,2]-.5,\n","        marker=dict(\n","            symbol='cross',\n","            color='red',\n","            size=10,\n","         \n","        )\n","    )\n",")\n","print(extrema[0][1])\n","fig.add_trace(\n","    go.Scatter(\n","        x=data.index[max_idx],\n","        y=data.iloc[max_idx,1],\n","        mode='lines',\n","        name='trend line',\n","        line=dict(color='blue')))\n","\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"xzYzuLc05U8e","executionInfo":{"status":"ok","timestamp":1679627059306,"user_tz":420,"elapsed":869,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"outputId":"58000ffa-28ee-48b7-c0b4-05caf19c29d8"},"execution_count":22,"outputs":[{"output_type":"stream","name":"stdout","text":["DatetimeIndex(['2022-10-06 00:00:00-04:00', '2022-10-18 00:00:00-04:00',\n","               '2022-11-15 00:00:00-05:00', '2022-11-22 00:00:00-05:00',\n","               '2022-12-01 00:00:00-05:00', '2022-12-13 00:00:00-05:00',\n","               '2023-01-12 00:00:00-05:00', '2023-02-02 00:00:00-05:00',\n","               '2023-02-14 00:00:00-05:00', '2023-03-06 00:00:00-05:00',\n","               '2023-03-22 00:00:00-04:00'],\n","              dtype='datetime64[ns, America/New_York]', name='Date', freq=None)\n","Date\n","2022-10-06 00:00:00-04:00    11.758094\n","2022-10-18 00:00:00-04:00    11.404328\n","2022-11-15 00:00:00-05:00    13.715360\n","2022-11-22 00:00:00-05:00    13.310860\n","2022-12-01 00:00:00-05:00    13.508406\n","2022-12-13 00:00:00-05:00    13.094500\n","2023-01-12 00:00:00-05:00    12.727628\n","2023-02-02 00:00:00-05:00    13.734174\n","2023-02-14 00:00:00-05:00    13.190000\n","2023-03-06 00:00:00-05:00    13.180000\n","2023-03-22 00:00:00-04:00    11.940000\n","Name: High, dtype: float64\n","36\n"]},{"output_type":"display_data","data":{"text/html":["<html>\n","<head><meta charset=\"utf-8\" /></head>\n","<body>\n","    <div>            <script src=\"https://cdnjs.cloudflare.com/ajax/libs/mathjax/2.7.5/MathJax.js?config=TeX-AMS-MML_SVG\"></script><script type=\"text/javascript\">if (window.MathJax && window.MathJax.Hub && window.MathJax.Hub.Config) {window.MathJax.Hub.Config({SVG: {font: \"STIX-Web\"}});}</script>                <script type=\"text/javascript\">window.PlotlyConfig = {MathJaxConfig: 'local'};</script>\n","        <script src=\"https://cdn.plot.ly/plotly-2.18.2.min.js\"></script>                <div id=\"07c125be-40e4-4b62-a9f3-e1bc753a1cfc\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"07c125be-40e4-4b62-a9f3-e1bc753a1cfc\")) {                    Plotly.newPlot(                        \"07c125be-40e4-4b62-a9f3-e1bc753a1cfc\",                        [{\"close\":[11.162276268005371,11.087799072265625,11.339160919189453,10.678174018859863,10.426813125610352,10.678174018859863,11.506732940673828,11.646378517150879,11.506732940673828,11.357779502868652,10.57576847076416,10.761961936950684,10.743342399597168,10.957464218139648,10.864367485046387,11.013321876525879,11.199515342712402,11.292612075805664,10.957464218139648,11.348468780517578,11.618449211120605,11.944287300109863,11.934977531433105,12.102551460266113,12.344603538513184,12.44700813293457,12.474937438964844,12.15841007232666,12.344603538513184,12.57734489440918,12.754227638244629,12.772847175598145,12.391151428222656,13.201090812683105,13.49899959564209,13.226198196411133,13.45196533203125,13.075685501098633,13.085092544555664,13.160348892211914,13.122720718383789,13.235604286193848,13.197976112365723,13.245011329650879,12.915766716003418,12.934581756591797,13.075685501098633,13.245011329650879,13.038058280944824,12.58652400970459,12.492453575134277,12.323128700256348,12.34194278717041,12.398385047912598,12.661779403686523,12.76525592803955,12.68059253692627,12.257279396057129,11.4012451171875,10.996746063232422,10.789793014526367,11.081408500671387,10.639281272888184,10.686315536499023,10.535804748535156,10.300630569458008,10.85564136505127,10.94030475616455,10.98733901977539,11.297769546508789,11.523536682128906,11.833966255187988,11.937442779541016,12.078547477722168,12.436012268066406,12.633559226989746,11.96566390991211,11.918628692626953,11.674047470092773,11.457687377929688,11.664640426635742,12.040919303894043,11.984477043151855,12.031512260437012,12.153802871704102,12.483047485351562,12.125582695007324,12.70881462097168,12.972208976745605,13.470778465270996,12.445418357849121,12.360756874084473,12.652372360229492,12.624151229858398,12.690000534057617,12.729999542236328,13.09000015258789,12.970000267028809,12.930000305175781,12.90999984741211,12.890000343322754,12.199999809265137,12.210000038146973,12.069999694824219,11.880000114440918,12.0600004196167,12.069999694824219,12.319999694824219,12.550000190734863,13.079999923706055,12.979999542236328,12.829999923706055,12.979999542236328,12.449999809265137,12.100000381469727,12.029999732971191,11.930000305175781,11.710000038146973,11.819999694824219,11.300000190734863,11.180000305175781,11.720000267028809,11.479999542236328,11.420000076293945],\"high\":[11.525353137053512,11.376398770759732,11.395018356163161,11.059869713406398,10.734031660837672,10.78988976693413,11.516042808496254,11.692926969315057,11.758094044852164,11.450876412761499,10.752652424834864,11.050560754584428,10.892296745378255,11.06917997014093,11.03194155960211,11.162276215588339,11.404328012760686,11.301921944261261,11.357778774184771,11.40432709981841,11.776713419834984,12.130480222637951,12.158409928165716,12.3073641181883,12.39115199408014,12.577343617367454,12.707678815720442,12.726298719460264,12.530796472943063,12.819396152430723,12.810085960933366,12.847324346127984,12.754227411821113,13.368663995634844,13.657263799859406,13.499000248896731,13.715360202707327,13.329674074318731,13.085092544555664,13.292046775936013,13.207383577392461,13.310859961820375,13.226197662845975,13.273231983432343,13.132127447889003,13.075685925998155,13.122720521745139,13.508406191554153,13.141535510687197,12.953396105596944,12.765255618288318,12.624151395564024,12.473640671510752,12.567709874666459,12.67118658732169,13.094500183371158,12.962801758654319,12.473640132617605,12.059732698274484,11.448281029291156,10.987339386967337,11.090815684359995,10.855641107698053,10.723943373358871,10.714537655949359,10.582839810494894,10.865048548644728,10.949711940216325,11.213106038700488,11.363618039879183,11.64582738314449,11.84337343895981,12.163210708145792,12.106768131515423,12.47364010515254,12.727628375538576,12.059733054492632,12.087954406046933,12.087954576024444,11.627012192877144,11.68345479400336,12.144395629657343,12.134988387945226,12.087954464221434,12.294907034527814,12.577116630989593,12.417198215532865,12.765255929417323,13.160348159361526,13.734174226465646,12.802883253078313,12.426605366198245,12.70881456554741,12.87813890141079,13.103907658365445,12.899999618530273,13.100000381469727,13.1899995803833,12.9399995803833,13.140000343322754,12.9399995803833,12.8100004196167,12.3100004196167,12.359999656677246,11.979999542236328,12.420000076293945,12.180000305175781,12.539999961853027,12.550000190734863,13.109999656677246,13.180000305175781,12.979999542236328,13.010000228881836,13.079999923706055,12.510000228881836,12.3100004196167,12.3100004196167,11.729999542236328,11.890000343322754,11.729999542236328,11.479999542236328,11.779999732971191,11.9399995803833,11.779999732971191],\"low\":[11.106418834513592,10.85505769497092,10.948155309021681,10.575767250580071,10.417503257794284,10.361645622063858,11.115727370510545,11.29261152367616,11.34846873904403,11.17158657092089,10.426814122812798,10.408194928369065,10.566459335941609,10.426813286336218,10.761961599394493,10.855057669312542,11.087799583005504,11.041250954532035,10.920224746301345,10.873677061730895,11.339160266648552,11.59983017147343,11.655688589233657,11.562591543065885,12.074623561630375,12.2328865026211,12.251505930360565,12.15841007232666,11.888430627200496,12.353913373699115,12.447009083051368,12.57734438099784,12.363221823455158,12.726298204004468,13.219709771268127,13.226198196411133,13.357895286802004,13.019244194017544,12.746442014339705,13.000430353803521,12.849918671088298,13.150941426834398,13.028651295076182,13.075685612725286,12.88754606301604,12.89695391827554,12.652372109516866,13.169755654821373,12.934581948320897,12.577116825859507,12.285500919719764,12.313721516748384,12.294907764397545,12.266687162998755,12.32312886688625,12.577116738043673,12.567709027658728,12.182023721719155,11.363617281043053,10.855641890968196,10.460548761418616,10.86504865854384,10.441734907700816,10.554618556048755,10.469956254813315,10.253595546432118,10.394700134392734,10.714537721632697,10.88386179659593,11.043780962734228,11.175478947139228,11.382432199561622,11.805745793066537,11.758710411003916,12.125582387826181,12.332535619125542,11.7304897027832,11.692861672812572,11.664640286521964,11.325989502198658,11.363617725701168,11.692861593106528,11.871593534556828,11.74930303575168,11.956256505479871,12.1067682114442,12.097361143638976,12.464233225391427,12.68999975426253,13.197976417483861,12.022104973039262,12.022105435514385,12.210244592780796,12.511267720599738,12.605337672398358,12.510000228881836,12.699999809265137,12.819999694824219,12.600000381469727,12.510000228881836,12.649999618530273,12.170000076293945,12.140000343322754,11.880000114440918,11.75,11.960000038146973,12.010000228881836,12.170000076293945,12.229999542236328,12.649999618530273,12.930000305175781,12.779999732971191,12.710000038146973,12.4399995803833,12.0,11.319999694824219,11.770000457763672,11.319999694824219,11.420000076293945,11.119999885559082,11.149999618530273,11.380000114440918,11.470000267028809,11.270000457763672],\"open\":[11.367088929096981,11.367088902586849,11.087799789293905,11.031940998347293,10.603697062764178,10.594386985844704,11.134347106155397,11.52535289665917,11.506732940673828,11.339160653592842,10.678175250859182,10.519910685630958,10.687484076010293,10.464051870336645,10.9853931069102,11.152966347437461,11.376399294793446,11.087799408972106,11.292611474143493,10.929534493193863,11.450876022004953,11.711545924990283,11.916358682944159,11.88842982213128,12.10255227983537,12.24219548249371,12.633201646185682,12.30736441335594,11.925669214086472,12.633202330667727,12.670440598130481,12.828704609576572,12.633201788008993,12.744917051960053,13.27556809127807,13.38611583665858,13.442558148084638,13.263825583684662,12.849918340959427,13.245011753383233,13.038057859375117,13.216790815846425,13.169755459003865,13.13212781740662,13.113313081151828,13.028651800941656,12.962801989818054,13.25441851328417,13.01924481006704,12.934581737906779,12.624151453494932,12.417197843980798,12.417198464759624,12.266687162998755,12.417198011882679,12.96280230181483,12.765255393156524,12.445418581902064,12.01269857593271,11.401246006163598,10.959117835819757,10.921489966438672,10.855641107698053,10.601653576403164,10.611060426251102,10.516991316529717,10.4229207880547,10.723944008566022,11.119035998922504,11.175478846593457,11.391838797084793,11.401245669986842,11.984477802046946,11.928036128000263,12.163210224912318,12.483047871616865,11.881001051806757,11.956256529262683,12.031512371717978,11.561163703570822,11.485908422235442,11.739895715741783,11.92803573741353,11.852780259836726,12.219651361406049,12.116175395143527,12.238466209125445,12.595931106961967,12.718221304493708,13.329674298081187,12.27609354219621,12.379570344494798,12.304314635937853,12.511267720599738,12.849919073387671,12.84000015258789,12.710000038146973,12.989999771118164,12.75,12.729999542236328,12.819999694824219,12.720000267028809,12.239999771118164,12.319999694824219,11.819999694824219,11.979999542236328,12.069999694824219,12.350000381469727,12.380000114440918,12.720000267028809,13.079999923706055,12.9399995803833,12.779999732971191,13.020000457763672,12.430000305175781,11.930000305175781,12.210000038146973,11.5,11.529999732971191,11.699999809265137,11.329999923706055,11.399999618530273,11.760000228881836,11.649999618530273],\"x\":[\"2022-09-26T00:00:00-04:00\",\"2022-09-27T00:00:00-04:00\",\"2022-09-28T00:00:00-04:00\",\"2022-09-29T00:00:00-04:00\",\"2022-09-30T00:00:00-04:00\",\"2022-10-03T00:00:00-04:00\",\"2022-10-04T00:00:00-04:00\",\"2022-10-05T00:00:00-04:00\",\"2022-10-06T00:00:00-04:00\",\"2022-10-07T00:00:00-04:00\",\"2022-10-10T00:00:00-04:00\",\"2022-10-11T00:00:00-04:00\",\"2022-10-12T00:00:00-04:00\",\"2022-10-13T00:00:00-04:00\",\"2022-10-14T00:00:00-04:00\",\"2022-10-17T00:00:00-04:00\",\"2022-10-18T00:00:00-04:00\",\"2022-10-19T00:00:00-04:00\",\"2022-10-20T00:00:00-04:00\",\"2022-10-21T00:00:00-04:00\",\"2022-10-24T00:00:00-04:00\",\"2022-10-25T00:00:00-04:00\",\"2022-10-26T00:00:00-04:00\",\"2022-10-27T00:00:00-04:00\",\"2022-10-28T00:00:00-04:00\",\"2022-10-31T00:00:00-04:00\",\"2022-11-01T00:00:00-04:00\",\"2022-11-02T00:00:00-04:00\",\"2022-11-03T00:00:00-04:00\",\"2022-11-04T00:00:00-04:00\",\"2022-11-07T00:00:00-05:00\",\"2022-11-08T00:00:00-05:00\",\"2022-11-09T00:00:00-05:00\",\"2022-11-10T00:00:00-05:00\",\"2022-11-11T00:00:00-05:00\",\"2022-11-14T00:00:00-05:00\",\"2022-11-15T00:00:00-05:00\",\"2022-11-16T00:00:00-05:00\",\"2022-11-17T00:00:00-05:00\",\"2022-11-18T00:00:00-05:00\",\"2022-11-21T00:00:00-05:00\",\"2022-11-22T00:00:00-05:00\",\"2022-11-23T00:00:00-05:00\",\"2022-11-25T00:00:00-05:00\",\"2022-11-28T00:00:00-05:00\",\"2022-11-29T00:00:00-05:00\",\"2022-11-30T00:00:00-05:00\",\"2022-12-01T00:00:00-05:00\",\"2022-12-02T00:00:00-05:00\",\"2022-12-05T00:00:00-05:00\",\"2022-12-06T00:00:00-05:00\",\"2022-12-07T00:00:00-05:00\",\"2022-12-08T00:00:00-05:00\",\"2022-12-09T00:00:00-05:00\",\"2022-12-12T00:00:00-05:00\",\"2022-12-13T00:00:00-05:00\",\"2022-12-14T00:00:00-05:00\",\"2022-12-15T00:00:00-05:00\",\"2022-12-16T00:00:00-05:00\",\"2022-12-19T00:00:00-05:00\",\"2022-12-20T00:00:00-05:00\",\"2022-12-21T00:00:00-05:00\",\"2022-12-22T00:00:00-05:00\",\"2022-12-23T00:00:00-05:00\",\"2022-12-27T00:00:00-05:00\",\"2022-12-28T00:00:00-05:00\",\"2022-12-29T00:00:00-05:00\",\"2022-12-30T00:00:00-05:00\",\"2023-01-03T00:00:00-05:00\",\"2023-01-04T00:00:00-05:00\",\"2023-01-05T00:00:00-05:00\",\"2023-01-06T00:00:00-05:00\",\"2023-01-09T00:00:00-05:00\",\"2023-01-10T00:00:00-05:00\",\"2023-01-11T00:00:00-05:00\",\"2023-01-12T00:00:00-05:00\",\"2023-01-13T00:00:00-05:00\",\"2023-01-17T00:00:00-05:00\",\"2023-01-18T00:00:00-05:00\",\"2023-01-19T00:00:00-05:00\",\"2023-01-20T00:00:00-05:00\",\"2023-01-23T00:00:00-05:00\",\"2023-01-24T00:00:00-05:00\",\"2023-01-25T00:00:00-05:00\",\"2023-01-26T00:00:00-05:00\",\"2023-01-27T00:00:00-05:00\",\"2023-01-30T00:00:00-05:00\",\"2023-01-31T00:00:00-05:00\",\"2023-02-01T00:00:00-05:00\",\"2023-02-02T00:00:00-05:00\",\"2023-02-03T00:00:00-05:00\",\"2023-02-06T00:00:00-05:00\",\"2023-02-07T00:00:00-05:00\",\"2023-02-08T00:00:00-05:00\",\"2023-02-09T00:00:00-05:00\",\"2023-02-10T00:00:00-05:00\",\"2023-02-13T00:00:00-05:00\",\"2023-02-14T00:00:00-05:00\",\"2023-02-15T00:00:00-05:00\",\"2023-02-16T00:00:00-05:00\",\"2023-02-17T00:00:00-05:00\",\"2023-02-21T00:00:00-05:00\",\"2023-02-22T00:00:00-05:00\",\"2023-02-23T00:00:00-05:00\",\"2023-02-24T00:00:00-05:00\",\"2023-02-27T00:00:00-05:00\",\"2023-02-28T00:00:00-05:00\",\"2023-03-01T00:00:00-05:00\",\"2023-03-02T00:00:00-05:00\",\"2023-03-03T00:00:00-05:00\",\"2023-03-06T00:00:00-05:00\",\"2023-03-07T00:00:00-05:00\",\"2023-03-08T00:00:00-05:00\",\"2023-03-09T00:00:00-05:00\",\"2023-03-10T00:00:00-05:00\",\"2023-03-13T00:00:00-04:00\",\"2023-03-14T00:00:00-04:00\",\"2023-03-15T00:00:00-04:00\",\"2023-03-16T00:00:00-04:00\",\"2023-03-17T00:00:00-04:00\",\"2023-03-20T00:00:00-04:00\",\"2023-03-21T00:00:00-04:00\",\"2023-03-22T00:00:00-04:00\",\"2023-03-23T00:00:00-04:00\"],\"type\":\"candlestick\"},{\"marker\":{\"color\":\"green\",\"size\":10,\"symbol\":\"cross\"},\"mode\":\"markers\",\"x\":[\"2022-10-06T00:00:00-04:00\",\"2022-10-18T00:00:00-04:00\",\"2022-11-15T00:00:00-05:00\",\"2022-11-22T00:00:00-05:00\",\"2022-12-01T00:00:00-05:00\",\"2022-12-13T00:00:00-05:00\",\"2023-01-12T00:00:00-05:00\",\"2023-02-02T00:00:00-05:00\",\"2023-02-14T00:00:00-05:00\",\"2023-03-06T00:00:00-05:00\",\"2023-03-22T00:00:00-04:00\"],\"y\":[12.258094044852164,11.904328012760686,14.215360202707327,13.810859961820375,14.008406191554153,13.594500183371158,13.227628375538576,14.234174226465646,13.6899995803833,13.680000305175781,12.4399995803833],\"type\":\"scatter\"},{\"marker\":{\"color\":\"red\",\"size\":10,\"symbol\":\"cross\"},\"mode\":\"markers\",\"x\":[\"2022-10-03T00:00:00-04:00\",\"2022-10-11T00:00:00-04:00\",\"2022-10-21T00:00:00-04:00\",\"2022-11-03T00:00:00-04:00\",\"2022-11-17T00:00:00-05:00\",\"2022-12-09T00:00:00-05:00\",\"2022-12-28T00:00:00-05:00\",\"2023-01-19T00:00:00-05:00\",\"2023-02-03T00:00:00-05:00\",\"2023-02-24T00:00:00-05:00\",\"2023-03-17T00:00:00-04:00\"],\"y\":[9.861645622063858,9.908194928369065,10.373677061730895,11.388430627200496,12.246442014339705,11.766687162998755,9.753595546432118,10.825989502198658,11.522104973039262,11.25,10.619999885559082],\"type\":\"scatter\"},{\"line\":{\"color\":\"blue\"},\"mode\":\"lines\",\"name\":\"trend line\",\"x\":[\"2022-10-06T00:00:00-04:00\",\"2022-10-18T00:00:00-04:00\",\"2022-11-15T00:00:00-05:00\",\"2022-11-22T00:00:00-05:00\",\"2022-12-01T00:00:00-05:00\",\"2022-12-13T00:00:00-05:00\",\"2023-01-12T00:00:00-05:00\",\"2023-02-02T00:00:00-05:00\",\"2023-02-14T00:00:00-05:00\",\"2023-03-06T00:00:00-05:00\",\"2023-03-22T00:00:00-04:00\"],\"y\":[11.758094044852164,11.404328012760686,13.715360202707327,13.310859961820375,13.508406191554153,13.094500183371158,12.727628375538576,13.734174226465646,13.1899995803833,13.180000305175781,11.9399995803833],\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"histogram2dcontour\":[{\"type\":\"histogram2dcontour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"choropleth\":[{\"type\":\"choropleth\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"histogram2d\":[{\"type\":\"histogram2d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmap\":[{\"type\":\"heatmap\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"heatmapgl\":[{\"type\":\"heatmapgl\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"contourcarpet\":[{\"type\":\"contourcarpet\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"contour\":[{\"type\":\"contour\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"surface\":[{\"type\":\"surface\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]}],\"mesh3d\":[{\"type\":\"mesh3d\",\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}],\"scatter\":[{\"fillpattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2},\"type\":\"scatter\"}],\"parcoords\":[{\"type\":\"parcoords\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolargl\":[{\"type\":\"scatterpolargl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"scattergeo\":[{\"type\":\"scattergeo\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterpolar\":[{\"type\":\"scatterpolar\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"scattergl\":[{\"type\":\"scattergl\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatter3d\":[{\"type\":\"scatter3d\",\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattermapbox\":[{\"type\":\"scattermapbox\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scatterternary\":[{\"type\":\"scatterternary\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"scattercarpet\":[{\"type\":\"scattercarpet\",\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}}}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}]},\"layout\":{\"autotypenumbers\":\"strict\",\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"hovermode\":\"closest\",\"hoverlabel\":{\"align\":\"left\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"bgcolor\":\"#E5ECF6\",\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"ternary\":{\"bgcolor\":\"#E5ECF6\",\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]]},\"xaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"yaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"automargin\":true,\"zerolinewidth\":2},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\",\"gridwidth\":2}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"geo\":{\"bgcolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"subunitcolor\":\"white\",\"showland\":true,\"showlakes\":true,\"lakecolor\":\"white\"},\"title\":{\"x\":0.05},\"mapbox\":{\"style\":\"light\"}}},\"xaxis\":{\"rangeslider\":{\"visible\":false}}},                        {\"responsive\": true}                    ).then(function(){\n","                            \n","var gd = document.getElementById('07c125be-40e4-4b62-a9f3-e1bc753a1cfc');\n","var x = new MutationObserver(function (mutations, observer) {{\n","        var display = window.getComputedStyle(gd).display;\n","        if (!display || display === 'none') {{\n","            console.log([gd, 'removed!']);\n","            Plotly.purge(gd);\n","            observer.disconnect();\n","        }}\n","}});\n","\n","// Listen for the removal of the full notebook cells\n","var notebookContainer = gd.closest('#notebook-container');\n","if (notebookContainer) {{\n","    x.observe(notebookContainer, {childList: true});\n","}}\n","\n","// Listen for the clearing of the current output cell\n","var outputEl = gd.closest('.output');\n","if (outputEl) {{\n","    x.observe(outputEl, {childList: true});\n","}}\n","\n","                        })                };                            </script>        </div>\n","</body>\n","</html>"]},"metadata":{}},{"output_type":"display_data","data":{"text/plain":["<Figure size 1080x576 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":["\n","\n","#create figure\n","plt.figure(figsize=(20,5))\n","\n","plt.scatter(data.iloc[max_idx].index, data.iloc[max_idx]['High']+.5,\n","  label='Maxima', s=100, color='green', marker='+')\n","plt.scatter(data.iloc[min_idx].index, data.iloc[min_idx]['Low']-.5,\n","  label='Minima', s=100, color='red', marker='+')\n","\n","#define width of candlestick elements\n","width = .6\n","width2 = .1\n","\n","#define up and down prices\n","up = data[data['Close']>=data['Open']]\n","down = data[data['Close']<data['Open']]\n","\n","#define colors to use\n","col1 = 'green'\n","col2 = 'red'\n","\n","#plot up prices\n","plt.bar(up.index,up['Close']-up['Open'],width,bottom=up['Open'],color=col1)\n","plt.bar(up.index,up['High']-up['Close'],width2,bottom=up['Close'],color=col1)\n","plt.bar(up.index,up['Low']-up['Open'],width2,bottom=up['Open'],color=col1)\n","\n","#plot down prices\n","plt.bar(down.index,down['Close']-down['Open'],width,bottom=down['Open'],color=col2)\n","plt.bar(down.index,down['High']-down['Open'],width2,bottom=down['Open'],color=col2)\n","plt.bar(down.index,down['Low']-down['Close'],width2,bottom=down['Close'],color=col2)\n","\n","#rotate x-axis tick labels\n","plt.xticks(rotation=45, ha='right')\n","\n","#lines\n","_ = [plt.plot(dates[i], close[i], c=colors[1]) for i in extrema]\n","\n","plt.legend()\n","#display candlestick chart\n","plt.show()"],"metadata":{"id":"JapScGwXXoxh","executionInfo":{"status":"ok","timestamp":1679622780457,"user_tz":420,"elapsed":1332,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"colab":{"base_uri":"https://localhost:8080/","height":346},"outputId":"de4f0de3-e2ae-45ec-db7f-e455d8793b26"},"execution_count":12,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1440x360 with 1 Axes>"],"image/png":"\n"},"metadata":{"needs_background":"light"}}]},{"cell_type":"code","source":[],"metadata":{"id":"7Z0Hd5KhS4-8","executionInfo":{"status":"ok","timestamp":1679622780458,"user_tz":420,"elapsed":7,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}}},"execution_count":12,"outputs":[]},{"cell_type":"code","source":[],"metadata":{"id":"sB6Bu9wZTQS2","executionInfo":{"status":"error","timestamp":1679622780458,"user_tz":420,"elapsed":6,"user":{"displayName":"Mike Jablonski","userId":"15617582428951059997"}},"colab":{"base_uri":"https://localhost:8080/","height":130},"outputId":"ec62139a-8ddb-4a97-b19f-ba7b6e9f92db"},"execution_count":13,"outputs":[{"output_type":"error","ename":"IndentationError","evalue":"ignored","traceback":["\u001b[0;36m  File \u001b[0;32m\"<ipython-input-13-c3fac6a9d687>\"\u001b[0;36m, line \u001b[0;32m3\u001b[0m\n\u001b[0;31m    sqrt(x, /)\u001b[0m\n\u001b[0m    ^\u001b[0m\n\u001b[0;31mIndentationError\u001b[0m\u001b[0;31m:\u001b[0m unexpected indent\n"]}]}]}